"""
Django settings for phonebooth project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+s+91wzk%^v-av3#$w-#zpe^&9xihgq+k!)wvb+7w32m*@&m7-'

# SECURITY WARNING: don't run with debug turned on in production!
def get_bool_from_env(name, default_value):
    if name in os.environ:
        value = os.environ[name]
        try:
            return ast.literal_eval(value)
        except ValueError as e:
            raise ValueError(
                '{} is an invalid value for {}'.format(value, name)) from e
    return default_value


DEBUG = get_bool_from_env('DEBUG', True)

PROJECT_ROOT = os.path.normpath(os.path.join(os.path.dirname(__file__), '..'))

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # Django modules
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',


    # Local apps
    'nationality',
    'authentication',
    'b2b',
    'customer_dashboard',

    # external apps
    'social_django',
    'django_filters',
    'phonenumber_field',

    'import_export',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.twitter',
    # 'allauth.socialaccount.providers.instagram',
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    # 'allauth.account.auth_backends.AuthenticationBackend',
    # 'social_core.backends.instagram.InstagramOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'authentication.middleware.SocialAuthExceptionMiddleware',
    # 'authentication.middleware.MySocialAuthExceptionMiddleware',
    # 'authentication.middleware.FacebookAuthCanceledExceptionMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    
]



TEMPLATE_CONTEXT_PROCESSORS = (
    # from http://django-allauth.readthedocs.org/en/latest/installation.html
    # Required by allauth template tags
    "django.core.context_processors.request",
    # allauth specific context processors
    # "allauth.account.context_processors.account",
    # "allauth.socialaccount.context_processors.socialaccount",

    # and this due to error message
    "django.contrib.auth.context_processors.auth",

    'social.apps.django_app.context_processors.backends',
    'social.apps.django_app.context_processors.login_redirect',
)

ROOT_URLCONF = 'phonebooth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_ROOT, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                # `allauth` needs this from django
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.login_redirect',
                'social_django.context_processors.backends',
            ],
            'libraries':{
                'filter_tags': 'templatetags.filter_tags',
                'materializecss': 'templatetags.materializecss',
                'utils': 'templatetags.utils',
            },
        },
    },
]

WSGI_APPLICATION = 'phonebooth.wsgi.application'

LOGIN_URL = '/'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': dj_database_url.config(
        #postgres://USER:PASSWORD@HOST:PORT/NAME
        default='postgres://postgres:postgres@localhost:5432/phonebooth_new',
        conn_max_age=0
)}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
    {'NAME': 'authentication.validators.NumberValidator',
        'OPTIONS': {
            'min_digits': 1, }
        },
    {'NAME': 'authentication.validators.UppercaseValidator', },
    {'NAME': 'authentication.validators.LowercaseValidator', },
    {'NAME': 'authentication.validators.SymbolValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


AUTH_USER_MODEL = 'authentication.User'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_ROOT = BASE_DIR + '/static/'


SITE_ID = 1

# Facebook
SOCIAL_AUTH_FACEBOOK_KEY = ""
SOCIAL_AUTH_FACEBOOK_SECRET = ""
SOCIAL_AUTH_RAISE_EXCEPTIONS = False




SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'pages_read_user_content', 'pages_manage_posts', 'pages_manage_engagement', 'pages_read_engagement', 'instagram_basic', 'instagram_manage_comments'] # add this
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {       # add this
  'fields': 'id, name, email, picture.type(large), link'
}
SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [                 # add this
    ('name', 'name'),
    ('email', 'email'),
    ('picture', 'picture'),
    ('link', 'profile_url'),
]

SOCIAL_AUTH_POSTGRES_JSONFIELD = True

# #instagram
SOCIAL_AUTH_INSTAGRAM_KEY = ''  # App ID
SOCIAL_AUTH_INSTAGRAM_SECRET ='' #app key
SOCIAL_AUTH_INSTAGRAM_EXTRA_DATA = [('user', 'user'),]

SOCIAL_AUTH_INSTAGRAM_AUTH_EXTRA_ARGUMENTS = {'scope': 'user_profile,user_media'}

# # twitter
SOCIAL_AUTH_TWITTER_KEY = ""
SOCIAL_AUTH_TWITTER_SECRET = ""
SOCIAL_AUTH_REDIRECT_IS_HTTPS = True
SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['state']
SESSION_COOKIE_SECURE = False
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/customer/social-accounts/'
CURRENT_DOMAIN = "https://phoneboothb2b.progfeel.co.in/"
INSTAGRAM_REDIRECT_URL = CURRENT_DOMAIN+ 'social-auth/complete/instagram/'
SOCIAL_AUTH_INSTAGRAM_REDIRECT_URL = CURRENT_DOMAIN+ 'social-auth/complete/instagram/'


ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'


SOCIAL_AUTH_PIPELINE = [
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details']


SOCIAL_AUTH_USER_MODEL = AUTH_USER_MODEL
FOREBEARS_KEY = "8df6ad5ac000c74fe115df1fa4efc73f"

CELERY_BROKER_URL = 'redis://localhost:6379/1'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'


CELERY_TASK_ROUTES = (
    {
        # 'customer_dahsboard.tasks.get_all_tweets': {'queue': 'phonebooth'},
        'customer_dahsboard.views.get_tweets_for_user': {'queue': 'phonebooth'},

    }
)


DASHBOARD_PAGINATE_BY = 10

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only
EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'TestSite Team'

SESSION_COOKIE_SAMESITE = None

AUTOCOMPLETE_API_KEY = ""

AUTOCOMPLETE_API_ENDPOINT = "https://api.emojidata.ai/predict"

