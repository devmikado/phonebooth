# Generated by Django 2.0 on 2020-07-03 09:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='data_collection_logging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searched_text', models.CharField(blank=True, max_length=255, null=True)),
                ('request', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Twitter Data Collections',
                'verbose_name': 'Twitter Data',
            },
        ),
        migrations.CreateModel(
            name='forebears_logging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('request_text', models.TextField(blank=True, null=True)),
                ('response_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Forebears Data Logging',
                'verbose_name': 'Forebears Data',
            },
        ),
        migrations.CreateModel(
            name='hashtag_collections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.CharField(blank=True, max_length=255, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Hashtag Collections',
                'verbose_name': 'Hashtag Collection',
            },
        ),
        migrations.CreateModel(
            name='nationality_prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=255, null=True)),
                ('percent', models.DecimalField(decimal_places=10, default=0.0, max_digits=19)),
                ('sanitisedForename', models.CharField(blank=True, max_length=255, null=True)),
                ('sanitisedSurname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Nationality Predicted User',
                'verbose_name': 'Nationality Predicted User',
            },
        ),
        migrations.CreateModel(
            name='nationality_user_data_preprocess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ethinicity Prepration List',
                'verbose_name': 'Ethinicity Data Prepration',
            },
        ),
        migrations.CreateModel(
            name='tweet_basic_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.BigIntegerField()),
                ('tweet_text', models.TextField(blank=True, null=True)),
                ('tweet_source', models.TextField(blank=True, null=True)),
                ('is_tweet_truncated', models.BooleanField(default=False)),
                ('tweet_geo', models.CharField(blank=True, max_length=255, null=True)),
                ('tweet_coordinates', models.CharField(blank=True, max_length=255, null=True)),
                ('tweet_contributors', models.CharField(blank=True, max_length=255, null=True)),
                ('tweet_lang', models.CharField(blank=True, max_length=15, null=True)),
                ('tweet_created_datetime', models.DateField()),
                ('is_pre_processed', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Tweets Info',
                'verbose_name': 'Tweet Basic Info',
            },
        ),
        migrations.CreateModel(
            name='tweet_entities_hashtags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twit_hashtags', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Hashtags',
                'verbose_name': 'Tweet Hashtags',
            },
        ),
        migrations.CreateModel(
            name='tweet_entities_symbols',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbols', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Symbols',
                'verbose_name': 'Tweet Symbols',
            },
        ),
        migrations.CreateModel(
            name='tweet_entities_user_mentions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_mentions', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Entities',
                'verbose_name': 'Tweet Entities',
            },
        ),
        migrations.CreateModel(
            name='tweet_entities_user_urls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urls', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets URLS',
                'verbose_name': 'Tweet Urls',
            },
        ),
        migrations.CreateModel(
            name='tweet_metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_language_code', models.CharField(blank=True, max_length=11, null=True)),
                ('result_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Metadata',
                'verbose_name': 'Tweet Metadata',
            },
        ),
        migrations.CreateModel(
            name='tweet_place_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_id', models.CharField(blank=True, max_length=255, null=True)),
                ('place_type', models.CharField(blank=True, max_length=255, null=True)),
                ('place_name', models.CharField(blank=True, max_length=255, null=True)),
                ('place_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(blank=True, max_length=65, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Places',
                'verbose_name': 'Tweet Place Info',
            },
        ),
        migrations.CreateModel(
            name='tweet_user_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_user_id', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('screen_name', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('is_protected', models.BooleanField(default=False)),
                ('profile_created_at', models.DateTimeField(blank=True, null=True)),
                ('utc_offset', models.CharField(blank=True, max_length=15, null=True)),
                ('time_zone', models.CharField(blank=True, max_length=64, null=True)),
                ('geo_enabled', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Collected Tweets Userdata',
                'verbose_name': 'Tweet Userdata',
            },
        ),
        migrations.CreateModel(
            name='usa_cities_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('county_name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='usa_states_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(blank=True, max_length=2, null=True)),
                ('state_name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='wordcloud_stopwords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_word', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='usa_cities_master',
            name='usa_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_user_data',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_user_data',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_user_data',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_user_data',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_place_info',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_place_info',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_place_info',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_place_info',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_metadata',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_metadata',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_metadata',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_metadata',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_urls',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_urls',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_urls',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_urls',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_mentions',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_mentions',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_mentions',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_user_mentions',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_entities_symbols',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_symbols',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_entities_symbols',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_symbols',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_entities_hashtags',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_hashtags',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_entities_hashtags',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='tweet_entities_hashtags',
            name='tweet_basic_info_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_basic_info'),
        ),
        migrations.AddField(
            model_name='tweet_basic_info',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='tweet_basic_info',
            name='data_collection_log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.data_collection_logging'),
        ),
        migrations.AddField(
            model_name='tweet_basic_info',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='tweet_basic_info',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='nationality_user_data_preprocess',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='nationality_user_data_preprocess',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='nationality_user_data_preprocess',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='nationality_user_data_preprocess',
            name='tweet_user_data_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_user_data'),
        ),
        migrations.AddField(
            model_name='nationality_prediction',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='nationality_prediction',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='forebears_logging',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='forebears_logging',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='forebears_logging',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
        migrations.AddField(
            model_name='forebears_logging',
            name='tweet_user_data_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.tweet_user_data'),
        ),
        migrations.AddField(
            model_name='data_collection_logging',
            name='city_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_cities_master'),
        ),
        migrations.AddField(
            model_name='data_collection_logging',
            name='hashtag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.hashtag_collections'),
        ),
        migrations.AddField(
            model_name='data_collection_logging',
            name='state_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nationality.usa_states_master'),
        ),
    ]
